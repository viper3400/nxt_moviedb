generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model homewebbridge_inventory {
  id        Int       @id @default(autoincrement())
  starttime DateTime? @db.DateTime(0)
  endtime   DateTime? @db.DateTime(0)
  state     Int?
  name      String?   @db.Text
}

model homewebbridge_inventorydata {
  id          Int    @id @default(autoincrement())
  movieid     Int
  state       Int?
  inventoryid Int
  rackid      String @db.VarChar(12)
}

model homewebbridge_usermoviesettings {
  id           Int    @id @default(autoincrement())
  vdb_movieid  Int
  asp_username String @db.VarChar(45)
  is_favorite  Int?
  watchagain   Int?
}

model homewebbridge_userseen {
  id            Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  vdb_videoid   Int
  viewdate      DateTime @db.DateTime(0)
  asp_viewgroup String   @db.VarChar(45)
  asp_username  String   @db.VarChar(45)
}

model videodb_actors {
  name    String   @id @db.VarChar(255)
  actorid String   @default("") @db.VarChar(15)
  imgurl  String   @default("") @db.VarChar(255)
  checked DateTime @default(now()) @db.Timestamp(0)

  @@index([actorid], map: "actorid")
}

model videodb_genres {
  id   Int    @id @default(autoincrement()) @db.UnsignedInt
  name String @db.VarChar(255)
}

model videodb_mediatypes {
  id   Int     @id @default(autoincrement()) @db.UnsignedInt
  name String? @db.VarChar(15)
}

model videodb_users {
  id          Int      @id @default(autoincrement())
  name        String   @unique(map: "name") @default("") @db.VarChar(255)
  passwd      String   @default("") @db.VarChar(100)
  cookiecode  String?  @db.VarChar(100)
  permissions Int?     @db.UnsignedInt
  timestamp   DateTime @default(now()) @db.Timestamp(0)
  email       String?  @db.VarChar(255)
}

model videodb_videodata {
  id           Int       @id @default(autoincrement()) @db.UnsignedInt
  md5          String?   @db.VarChar(32)
  title        String?   @db.VarChar(255)
  subtitle     String?   @db.VarChar(255)
  language     String?   @db.VarChar(255)
  diskid       String?   @db.VarChar(15)
  comment      String?   @db.VarChar(255)
  disklabel    String?   @db.VarChar(32)
  imdbID       String?   @db.VarChar(30)
  year         Int       @default(0) @db.UnsignedInt
  imgurl       String?   @db.VarChar(255)
  director     String?   @db.VarChar(255)
  actors       String?   @db.Text
  runtime      Int?      @db.UnsignedInt
  country      String?   @db.VarChar(255)
  plot         String?   @db.Text
  rating       String?   @db.VarChar(15)
  filename     String?   @db.VarChar(255)
  filesize     BigInt?   @db.UnsignedBigInt
  filedate     DateTime? @db.DateTime(0)
  audio_codec  String?   @db.VarChar(255)
  video_codec  String?   @db.VarChar(255)
  video_width  Int?      @db.UnsignedInt
  video_height Int?      @db.UnsignedInt
  istv         Int       @default(0) @db.UnsignedTinyInt
  lastupdate   DateTime  @default(now()) @db.Timestamp(0)
  mediatype    Int       @default(0) @db.UnsignedInt
  custom1      String?   @db.VarChar(255)
  custom2      String?   @db.VarChar(255)
  custom3      String?   @db.VarChar(255)
  custom4      String?   @db.VarChar(255)
  created      DateTime? @db.DateTime(0)
  owner_id     Int       @default(1)

  @@index([comment], map: "comment")
  @@index([diskid], map: "diskid_idx")
  @@index([mediatype, istv], map: "mediatype")
  @@index([title], map: "title_idx")
  @@index([owner_id, title(length: 50), subtitle(length: 50)], map: "vdb1_idx")
}

model videodb_videogenre {
  video_id Int @db.UnsignedInt
  genre_id Int @db.UnsignedInt

  @@id([video_id, genre_id])
}
